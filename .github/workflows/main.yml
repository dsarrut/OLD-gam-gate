name: CI

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * 0,3'
  workflow_dispatch:


jobs:
  build_wheel:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - name: Checkout github repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: 'x64'
    - name: Create Wheel
      run: |
          pip install wheel 
          python setup.py sdist bdist_wheel
    - name: Upload wheels
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist/

  publish_wheel:
    runs-on: ubuntu-latest
    needs: [build_wheel]
    steps:
    - name: Checkout github repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - uses: actions/download-artifact@v1
      with:
        name: dist
        path: dist/
    - name: Publish to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI }}
        skip_existing: true

  test_wheel:
    runs-on: ${{ matrix.os }}
    needs: [build_wheel]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: dist
        path: dist/
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Run tests
      run: |
          pip install dist/*.whl
          git clone https://gitlab.in2p3.fr/opengamgate/gam-tests.git
          cd gam-tests
          git lfs checkout
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
              path=`python -c "import utils; utils.get_site_packages_dir()"`
              export LD_LIBRARY_PATH="${path}/gam_g4.libs":${LD_LIBRARY_PATH}
              path=`python -c "import utils; utils.get_libG4processes_path()"`
              export LD_PRELOAD=${path}:${LD_PRELOAD}
              path=`python -c "import utils; utils.get_libG4geometry_path()"`
              export LD_PRELOAD=${path}:${LD_PRELOAD}
          fi
          echo "coucou8"
          ./all_tests.py
          echo "coucou9"
          OutputTest=$(./all_tests.py)
          echo "coucou10"
          echo "$OutputTest"
          OutputTest=$(echo "$OutputTest" | tail -1)
          if [ "$OutputTest" != "True" ]; then
              exit -1
          else
              exit 0
          fi

